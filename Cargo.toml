[package]
name = "arcweight"
version = "0.1.0"
edition = "2021"
rust-version = "1.75"
authors = ["Aaron Steven White <aaron.white@rochester.edu>"]
license = "Apache-2.0"
description = "A high-performance, modular library for weighted finite state transducers with comprehensive examples and benchmarks"
readme = "README.md"
homepage = "https://github.com/aaronstevenwhite/arcweight"
repository = "https://github.com/aaronstevenwhite/arcweight"
documentation = "https://docs.rs/arcweight"
keywords = ["fst", "transducer", "automata", "nlp", "speech"]
categories = ["algorithms", "data-structures", "science", "text-processing"]
include = [
    "src/**/*",
    "examples/**/*",
    "benches/**/*",
    "tests/**/*",
    "docs/**/*",
    "Cargo.toml",
    "README.md",
    "LICENSE",
    "CONTRIBUTING.md",
    "CHANGELOG.md",
    "clippy.toml",
    "rustfmt.toml"
]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]
# core dependencies
thiserror = "1.0"
anyhow = "1.0"
num-traits = "0.2"
ordered-float = "5.1"
indexmap = "2.2"
rayon = { version = "1.8", optional = true }
serde = { version = "1.0", features = ["derive"], optional = true }
bincode = { version = "1.3", optional = true }
byteorder = "1.5"
bitflags = "2.4"
rand = "0.9"

# development dependencies
[dev-dependencies]
criterion = { version = "0.5.1", features = ["html_reports"] }
proptest = "1.4"
pretty_assertions = "1.4"
approx = "0.5"
rayon = "1.8"

[features]
default = ["parallel", "serde"]
parallel = ["rayon"]
serde = ["dep:serde", "bincode", "ordered-float/serde"]

[[bench]]
name = "basic_operations"
harness = false
path = "benches/core/basic_operations.rs"

[[bench]]
name = "composition"
harness = false
path = "benches/core/composition.rs"

[[bench]]
name = "creation"
harness = false
path = "benches/core/creation.rs"

[[bench]]
name = "determinization"
harness = false
path = "benches/core/determinization.rs"

[[bench]]
name = "epsilon_removal"
harness = false
path = "benches/core/epsilon_removal.rs"

[[bench]]
name = "minimization"
harness = false
path = "benches/core/minimization.rs"

[[bench]]
name = "shortest_path"
harness = false
path = "benches/core/shortest_path.rs"

[[bench]]
name = "arc_storage"
harness = false
path = "benches/memory/arc_storage.rs"

[[bench]]
name = "memory_operations"
harness = false
path = "benches/memory/memory_operations.rs"

[[bench]]
name = "memory_usage"
harness = false
path = "benches/memory/memory_usage.rs"

[[bench]]
name = "state_management"
harness = false
path = "benches/memory/state_management.rs"

[[bench]]
name = "deserialization"
harness = false
path = "benches/io/deserialization.rs"

[[bench]]
name = "serialization"
harness = false
path = "benches/io/serialization.rs"

[[bench]]
name = "optimization"
harness = false
path = "benches/optimization/optimization.rs"

[[bench]]
name = "weight_pushing"
harness = false
path = "benches/optimization/weight_pushing.rs"

[[bench]]
name = "optimization_epsilon_removal"
harness = false
path = "benches/optimization/epsilon_removal.rs"

[[bench]]
name = "optimization_minimization"
harness = false
path = "benches/optimization/minimization.rs"

[[bench]]
name = "arc_processing"
harness = false
path = "benches/parallel/arc_processing.rs"

[[bench]]
name = "parallel_ops"
harness = false
path = "benches/parallel/parallel_ops.rs"

[[bench]]
name = "parallel_operations"
harness = false
path = "benches/parallel/parallel_operations.rs"

[[bench]]
name = "parallel_processing"
harness = false
path = "benches/parallel/parallel_processing.rs"

[[bench]]
name = "parallel_state_processing"
harness = false
path = "benches/parallel/parallel_state_processing.rs"

[[bench]]
name = "state_processing"
harness = false
path = "benches/parallel/state_processing.rs"

[[bench]]
name = "weight_processing"
harness = false
path = "benches/parallel/weight_processing.rs"

# New algorithm benchmarks
[[bench]]
name = "union"
harness = false
path = "benches/core/union.rs"

[[bench]]
name = "concat"
harness = false
path = "benches/core/concat.rs"

[[bench]]
name = "closure_ops"
harness = false
path = "benches/core/closure_ops.rs"

[[bench]]
name = "intersect"
harness = false
path = "benches/core/intersect.rs"

[[bench]]
name = "reverse"
harness = false
path = "benches/core/reverse.rs"

# Semiring benchmarks
[[bench]]
name = "semiring_operations"
harness = false
path = "benches/semirings/semiring_operations.rs"

[[bench]]
name = "semiring_fst_ops"
harness = false
path = "benches/semirings/semiring_fst_ops.rs"

# FST type benchmarks
[[bench]]
name = "fst_type_comparison"
harness = false
path = "benches/fst_types/fst_type_comparison.rs"

# Binary I/O benchmarks
[[bench]]
name = "binary_format"
harness = false
path = "benches/io/binary_format.rs"

# Main benchmark harness
[[bench]]
name = "benchmarks"
harness = false
path = "benches/benchmarks.rs"

# Example programs
[[example]]
name = "edit_distance"
path = "examples/edit_distance.rs"
doc-scrape-examples = true

[[example]]
name = "string_alignment"
path = "examples/string_alignment.rs"
doc-scrape-examples = true

[[example]]
name = "spell_checking"
path = "examples/spell_checking.rs"
doc-scrape-examples = true

[[example]]
name = "pronunciation_lexicon"
path = "examples/pronunciation_lexicon.rs"
doc-scrape-examples = true

[[example]]
name = "morphological_analyzer"
path = "examples/morphological_analyzer.rs"
doc-scrape-examples = true

[[example]]
name = "number_date_normalizer"
path = "examples/number_date_normalizer.rs"
doc-scrape-examples = true

[[example]]
name = "transliteration"
path = "examples/transliteration.rs"
doc-scrape-examples = true

[[example]]
name = "phonological_rules"
path = "examples/phonological_rules.rs"
doc-scrape-examples = true