{"$message_type":"diagnostic","message":"unneeded unit expression","code":{"code":"clippy::unused_unit","explanation":null},"level":"warning","spans":[{"file_name":"src/algorithms/compose.rs","byte_start":812,"byte_end":814,"line_start":33,"line_end":33,"column_start":9,"column_end":11,"is_primary":true,"text":[{"text":"        ()","highlight_start":9,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_unit","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::unused_unit)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the final `()`","code":null,"level":"help","spans":[{"file_name":"src/algorithms/compose.rs","byte_start":812,"byte_end":814,"line_start":33,"line_end":33,"column_start":9,"column_end":11,"is_primary":true,"text":[{"text":"        ()","highlight_start":9,"highlight_end":11}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unneeded unit expression\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/algorithms/compose.rs:33:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ()\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove the final `()`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_unit\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::unused_unit)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unneeded unit expression","code":{"code":"clippy::unused_unit","explanation":null},"level":"warning","spans":[{"file_name":"src/algorithms/difference.rs","byte_start":406,"byte_end":408,"line_start":17,"line_end":17,"column_start":9,"column_end":11,"is_primary":true,"text":[{"text":"        ()","highlight_start":9,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_unit","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"remove the final `()`","code":null,"level":"help","spans":[{"file_name":"src/algorithms/difference.rs","byte_start":406,"byte_end":408,"line_start":17,"line_end":17,"column_start":9,"column_end":11,"is_primary":true,"text":[{"text":"        ()","highlight_start":9,"highlight_end":11}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unneeded unit expression\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/algorithms/difference.rs:17:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ()\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove the final `()`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_unit\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this pattern takes a reference on something that is being dereferenced","code":{"code":"clippy::needless_borrowed_reference","explanation":null},"level":"warning","spans":[{"file_name":"src/algorithms/determinize.rs","byte_start":2417,"byte_end":2428,"line_start":89,"line_end":89,"column_start":22,"column_end":33,"is_primary":true,"text":[{"text":"        for (&state, &ref weight) in &subset.states {","highlight_start":22,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrowed_reference","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::needless_borrowed_reference)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try removing the `&ref` part","code":null,"level":"help","spans":[{"file_name":"src/algorithms/determinize.rs","byte_start":2417,"byte_end":2422,"line_start":89,"line_end":89,"column_start":22,"column_end":27,"is_primary":true,"text":[{"text":"        for (&state, &ref weight) in &subset.states {","highlight_start":22,"highlight_end":27}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this pattern takes a reference on something that is being dereferenced\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/algorithms/determinize.rs:89:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        for (&state, &ref weight) in &subset.states {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrowed_reference\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::needless_borrowed_reference)]` on by default\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: try removing the `&ref` part\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m        for (&state, \u001b[0m\u001b[0m\u001b[38;5;9m&ref \u001b[0m\u001b[0mweight) in &subset.states {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m        for (&state, weight) in &subset.states {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"non-canonical implementation of `partial_cmp` on an `Ord` type","code":{"code":"clippy::non_canonical_partial_ord_impl","explanation":null},"level":"warning","spans":[{"file_name":"src/algorithms/shortest_path.rs","byte_start":1165,"byte_end":1392,"line_start":49,"line_end":54,"column_start":1,"column_end":2,"is_primary":true,"text":[{"text":"impl<W: NaturallyOrderedSemiring> PartialOrd for PathState<W> {","highlight_start":1,"highlight_end":64},{"text":"    fn partial_cmp(&self, other: &Self) -> Option<Ordering> {","highlight_start":1,"highlight_end":62},{"text":"        // reverse order for min-heap behavior","highlight_start":1,"highlight_end":47},{"text":"        other.weight.partial_cmp(&self.weight)","highlight_start":1,"highlight_end":47},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#non_canonical_partial_ord_impl","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::non_canonical_partial_ord_impl)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"change this to","code":null,"level":"help","spans":[{"file_name":"src/algorithms/shortest_path.rs","byte_start":1289,"byte_end":1390,"line_start":50,"line_end":53,"column_start":61,"column_end":6,"is_primary":true,"text":[{"text":"    fn partial_cmp(&self, other: &Self) -> Option<Ordering> {","highlight_start":61,"highlight_end":62},{"text":"        // reverse order for min-heap behavior","highlight_start":1,"highlight_end":47},{"text":"        other.weight.partial_cmp(&self.weight)","highlight_start":1,"highlight_end":47},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":"{ Some(self.cmp(other)) }","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: non-canonical implementation of `partial_cmp` on an `Ord` type\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/algorithms/shortest_path.rs:49:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m  \u001b[0m\u001b[0mimpl<W: NaturallyOrderedSemiring> PartialOrd for PathState<W> {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m  \u001b[0m\u001b[0m    fn partial_cmp(&self, other: &Self) -> Option<Ordering> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m _____________________________________________________________-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        // reverse order for min-heap behavior\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m52\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        other.weight.partial_cmp(&self.weight)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_____-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: change this to: `{ Some(self.cmp(other)) }`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m  \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|__^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#non_canonical_partial_ord_impl\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::non_canonical_partial_ord_impl)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the following explicit lifetimes could be elided: 'a","code":{"code":"clippy::needless_lifetimes","explanation":null},"level":"warning","spans":[{"file_name":"src/fst/traits.rs","byte_start":1239,"byte_end":1241,"line_start":47,"line_end":47,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    fn arcs<'a>(&'a self, state: StateId) -> Self::ArcIter<'a>;","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/fst/traits.rs","byte_start":1244,"byte_end":1246,"line_start":47,"line_end":47,"column_start":18,"column_end":20,"is_primary":true,"text":[{"text":"    fn arcs<'a>(&'a self, state: StateId) -> Self::ArcIter<'a>;","highlight_start":18,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/fst/traits.rs","byte_start":1286,"byte_end":1288,"line_start":47,"line_end":47,"column_start":60,"column_end":62,"is_primary":true,"text":[{"text":"    fn arcs<'a>(&'a self, state: StateId) -> Self::ArcIter<'a>;","highlight_start":60,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::needless_lifetimes)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"elide the lifetimes","code":null,"level":"help","spans":[{"file_name":"src/fst/traits.rs","byte_start":1238,"byte_end":1242,"line_start":47,"line_end":47,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"    fn arcs<'a>(&'a self, state: StateId) -> Self::ArcIter<'a>;","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/fst/traits.rs","byte_start":1244,"byte_end":1247,"line_start":47,"line_end":47,"column_start":18,"column_end":21,"is_primary":true,"text":[{"text":"    fn arcs<'a>(&'a self, state: StateId) -> Self::ArcIter<'a>;","highlight_start":18,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/fst/traits.rs","byte_start":1286,"byte_end":1288,"line_start":47,"line_end":47,"column_start":60,"column_end":62,"is_primary":true,"text":[{"text":"    fn arcs<'a>(&'a self, state: StateId) -> Self::ArcIter<'a>;","highlight_start":60,"highlight_end":62}],"label":null,"suggested_replacement":"'_","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the following explicit lifetimes could be elided: 'a\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/fst/traits.rs:47:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn arcs<'a>(&'a self, state: StateId) -> Self::ArcIter<'a>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::needless_lifetimes)]` on by default\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: elide the lifetimes\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    fn arcs\u001b[0m\u001b[0m\u001b[38;5;9m<'a>\u001b[0m\u001b[0m(&\u001b[0m\u001b[0m\u001b[38;5;9m'a \u001b[0m\u001b[0mself, state: StateId) -> Self::ArcIter<\u001b[0m\u001b[0m\u001b[38;5;9m'a\u001b[0m\u001b[0m>;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    fn arcs(&self, state: StateId) -> Self::ArcIter<\u001b[0m\u001b[0m\u001b[38;5;10m'_\u001b[0m\u001b[0m>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the following explicit lifetimes could be elided: 'a","code":{"code":"clippy::needless_lifetimes","explanation":null},"level":"warning","spans":[{"file_name":"src/fst/vector_fst.rs","byte_start":1623,"byte_end":1625,"line_start":72,"line_end":72,"column_start":6,"column_end":8,"is_primary":true,"text":[{"text":"impl<'a, W: Semiring> Iterator for VectorArcIterator<'a, W> {","highlight_start":6,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/fst/vector_fst.rs","byte_start":1671,"byte_end":1673,"line_start":72,"line_end":72,"column_start":54,"column_end":56,"is_primary":true,"text":[{"text":"impl<'a, W: Semiring> Iterator for VectorArcIterator<'a, W> {","highlight_start":54,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"elide the lifetimes","code":null,"level":"help","spans":[{"file_name":"src/fst/vector_fst.rs","byte_start":1623,"byte_end":1627,"line_start":72,"line_end":72,"column_start":6,"column_end":10,"is_primary":true,"text":[{"text":"impl<'a, W: Semiring> Iterator for VectorArcIterator<'a, W> {","highlight_start":6,"highlight_end":10}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/fst/vector_fst.rs","byte_start":1671,"byte_end":1673,"line_start":72,"line_end":72,"column_start":54,"column_end":56,"is_primary":true,"text":[{"text":"impl<'a, W: Semiring> Iterator for VectorArcIterator<'a, W> {","highlight_start":54,"highlight_end":56}],"label":null,"suggested_replacement":"'_","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the following explicit lifetimes could be elided: 'a\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/fst/vector_fst.rs:72:6\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m72\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl<'a, W: Semiring> Iterator for VectorArcIterator<'a, W> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m                                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: elide the lifetimes\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m72\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mimpl<\u001b[0m\u001b[0m\u001b[38;5;9m'a, \u001b[0m\u001b[0mW: Semiring> Iterator for VectorArcIterator<\u001b[0m\u001b[0m\u001b[38;5;9m'a\u001b[0m\u001b[0m, W> {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m72\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mimpl<W: Semiring> Iterator for VectorArcIterator<\u001b[0m\u001b[0m\u001b[38;5;10m'_\u001b[0m\u001b[0m, W> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the following explicit lifetimes could be elided: 'a","code":{"code":"clippy::needless_lifetimes","explanation":null},"level":"warning","spans":[{"file_name":"src/fst/vector_fst.rs","byte_start":1804,"byte_end":1806,"line_start":80,"line_end":80,"column_start":6,"column_end":8,"is_primary":true,"text":[{"text":"impl<'a, W: Semiring> ArcIterator<W> for VectorArcIterator<'a, W> {}","highlight_start":6,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/fst/vector_fst.rs","byte_start":1858,"byte_end":1860,"line_start":80,"line_end":80,"column_start":60,"column_end":62,"is_primary":true,"text":[{"text":"impl<'a, W: Semiring> ArcIterator<W> for VectorArcIterator<'a, W> {}","highlight_start":60,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"elide the lifetimes","code":null,"level":"help","spans":[{"file_name":"src/fst/vector_fst.rs","byte_start":1804,"byte_end":1808,"line_start":80,"line_end":80,"column_start":6,"column_end":10,"is_primary":true,"text":[{"text":"impl<'a, W: Semiring> ArcIterator<W> for VectorArcIterator<'a, W> {}","highlight_start":6,"highlight_end":10}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/fst/vector_fst.rs","byte_start":1858,"byte_end":1860,"line_start":80,"line_end":80,"column_start":60,"column_end":62,"is_primary":true,"text":[{"text":"impl<'a, W: Semiring> ArcIterator<W> for VectorArcIterator<'a, W> {}","highlight_start":60,"highlight_end":62}],"label":null,"suggested_replacement":"'_","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the following explicit lifetimes could be elided: 'a\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/fst/vector_fst.rs:80:6\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m80\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl<'a, W: Semiring> ArcIterator<W> for VectorArcIterator<'a, W> {}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m                                                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: elide the lifetimes\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m80\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mimpl<\u001b[0m\u001b[0m\u001b[38;5;9m'a, \u001b[0m\u001b[0mW: Semiring> ArcIterator<W> for VectorArcIterator<\u001b[0m\u001b[0m\u001b[38;5;9m'a\u001b[0m\u001b[0m, W> {}\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m80\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mimpl<W: Semiring> ArcIterator<W> for VectorArcIterator<\u001b[0m\u001b[0m\u001b[38;5;10m'_\u001b[0m\u001b[0m, W> {}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the following explicit lifetimes could be elided: 'a","code":{"code":"clippy::needless_lifetimes","explanation":null},"level":"warning","spans":[{"file_name":"src/fst/vector_fst.rs","byte_start":2563,"byte_end":2565,"line_start":110,"line_end":110,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    fn arcs<'a>(&'a self, state: StateId) -> Self::ArcIter<'a> {","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/fst/vector_fst.rs","byte_start":2568,"byte_end":2570,"line_start":110,"line_end":110,"column_start":18,"column_end":20,"is_primary":true,"text":[{"text":"    fn arcs<'a>(&'a self, state: StateId) -> Self::ArcIter<'a> {","highlight_start":18,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/fst/vector_fst.rs","byte_start":2610,"byte_end":2612,"line_start":110,"line_end":110,"column_start":60,"column_end":62,"is_primary":true,"text":[{"text":"    fn arcs<'a>(&'a self, state: StateId) -> Self::ArcIter<'a> {","highlight_start":60,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"elide the lifetimes","code":null,"level":"help","spans":[{"file_name":"src/fst/vector_fst.rs","byte_start":2562,"byte_end":2566,"line_start":110,"line_end":110,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"    fn arcs<'a>(&'a self, state: StateId) -> Self::ArcIter<'a> {","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/fst/vector_fst.rs","byte_start":2568,"byte_end":2571,"line_start":110,"line_end":110,"column_start":18,"column_end":21,"is_primary":true,"text":[{"text":"    fn arcs<'a>(&'a self, state: StateId) -> Self::ArcIter<'a> {","highlight_start":18,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/fst/vector_fst.rs","byte_start":2610,"byte_end":2612,"line_start":110,"line_end":110,"column_start":60,"column_end":62,"is_primary":true,"text":[{"text":"    fn arcs<'a>(&'a self, state: StateId) -> Self::ArcIter<'a> {","highlight_start":60,"highlight_end":62}],"label":null,"suggested_replacement":"'_","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the following explicit lifetimes could be elided: 'a\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/fst/vector_fst.rs:110:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m110\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn arcs<'a>(&'a self, state: StateId) -> Self::ArcIter<'a> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: elide the lifetimes\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m110\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    fn arcs\u001b[0m\u001b[0m\u001b[38;5;9m<'a>\u001b[0m\u001b[0m(&\u001b[0m\u001b[0m\u001b[38;5;9m'a \u001b[0m\u001b[0mself, state: StateId) -> Self::ArcIter<\u001b[0m\u001b[0m\u001b[38;5;9m'a\u001b[0m\u001b[0m> {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m110\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    fn arcs(&self, state: StateId) -> Self::ArcIter<\u001b[0m\u001b[0m\u001b[38;5;10m'_\u001b[0m\u001b[0m> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the following explicit lifetimes could be elided: 'a","code":{"code":"clippy::needless_lifetimes","explanation":null},"level":"warning","spans":[{"file_name":"src/fst/const_fst.rs","byte_start":1595,"byte_end":1597,"line_start":61,"line_end":61,"column_start":6,"column_end":8,"is_primary":true,"text":[{"text":"impl<'a, W: Semiring> ArcIterator<W> for ConstArcIterator<'a, W> {","highlight_start":6,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/fst/const_fst.rs","byte_start":1648,"byte_end":1650,"line_start":61,"line_end":61,"column_start":59,"column_end":61,"is_primary":true,"text":[{"text":"impl<'a, W: Semiring> ArcIterator<W> for ConstArcIterator<'a, W> {","highlight_start":59,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"elide the lifetimes","code":null,"level":"help","spans":[{"file_name":"src/fst/const_fst.rs","byte_start":1595,"byte_end":1599,"line_start":61,"line_end":61,"column_start":6,"column_end":10,"is_primary":true,"text":[{"text":"impl<'a, W: Semiring> ArcIterator<W> for ConstArcIterator<'a, W> {","highlight_start":6,"highlight_end":10}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/fst/const_fst.rs","byte_start":1648,"byte_end":1650,"line_start":61,"line_end":61,"column_start":59,"column_end":61,"is_primary":true,"text":[{"text":"impl<'a, W: Semiring> ArcIterator<W> for ConstArcIterator<'a, W> {","highlight_start":59,"highlight_end":61}],"label":null,"suggested_replacement":"'_","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the following explicit lifetimes could be elided: 'a\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/fst/const_fst.rs:61:6\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m61\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl<'a, W: Semiring> ArcIterator<W> for ConstArcIterator<'a, W> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: elide the lifetimes\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m61\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mimpl<\u001b[0m\u001b[0m\u001b[38;5;9m'a, \u001b[0m\u001b[0mW: Semiring> ArcIterator<W> for ConstArcIterator<\u001b[0m\u001b[0m\u001b[38;5;9m'a\u001b[0m\u001b[0m, W> {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m61\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mimpl<W: Semiring> ArcIterator<W> for ConstArcIterator<\u001b[0m\u001b[0m\u001b[38;5;10m'_\u001b[0m\u001b[0m, W> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the following explicit lifetimes could be elided: 'a","code":{"code":"clippy::needless_lifetimes","explanation":null},"level":"warning","spans":[{"file_name":"src/fst/const_fst.rs","byte_start":1762,"byte_end":1764,"line_start":67,"line_end":67,"column_start":6,"column_end":8,"is_primary":true,"text":[{"text":"impl<'a, W: Semiring> Iterator for ConstArcIterator<'a, W> {","highlight_start":6,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/fst/const_fst.rs","byte_start":1809,"byte_end":1811,"line_start":67,"line_end":67,"column_start":53,"column_end":55,"is_primary":true,"text":[{"text":"impl<'a, W: Semiring> Iterator for ConstArcIterator<'a, W> {","highlight_start":53,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"elide the lifetimes","code":null,"level":"help","spans":[{"file_name":"src/fst/const_fst.rs","byte_start":1762,"byte_end":1766,"line_start":67,"line_end":67,"column_start":6,"column_end":10,"is_primary":true,"text":[{"text":"impl<'a, W: Semiring> Iterator for ConstArcIterator<'a, W> {","highlight_start":6,"highlight_end":10}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/fst/const_fst.rs","byte_start":1809,"byte_end":1811,"line_start":67,"line_end":67,"column_start":53,"column_end":55,"is_primary":true,"text":[{"text":"impl<'a, W: Semiring> Iterator for ConstArcIterator<'a, W> {","highlight_start":53,"highlight_end":55}],"label":null,"suggested_replacement":"'_","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the following explicit lifetimes could be elided: 'a\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/fst/const_fst.rs:67:6\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl<'a, W: Semiring> Iterator for ConstArcIterator<'a, W> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: elide the lifetimes\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mimpl<\u001b[0m\u001b[0m\u001b[38;5;9m'a, \u001b[0m\u001b[0mW: Semiring> Iterator for ConstArcIterator<\u001b[0m\u001b[0m\u001b[38;5;9m'a\u001b[0m\u001b[0m, W> {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mimpl<W: Semiring> Iterator for ConstArcIterator<\u001b[0m\u001b[0m\u001b[38;5;10m'_\u001b[0m\u001b[0m, W> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the following explicit lifetimes could be elided: 'a","code":{"code":"clippy::needless_lifetimes","explanation":null},"level":"warning","spans":[{"file_name":"src/fst/const_fst.rs","byte_start":2636,"byte_end":2638,"line_start":103,"line_end":103,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    fn arcs<'a>(&'a self, state: StateId) -> Self::ArcIter<'a> {","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/fst/const_fst.rs","byte_start":2641,"byte_end":2643,"line_start":103,"line_end":103,"column_start":18,"column_end":20,"is_primary":true,"text":[{"text":"    fn arcs<'a>(&'a self, state: StateId) -> Self::ArcIter<'a> {","highlight_start":18,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/fst/const_fst.rs","byte_start":2683,"byte_end":2685,"line_start":103,"line_end":103,"column_start":60,"column_end":62,"is_primary":true,"text":[{"text":"    fn arcs<'a>(&'a self, state: StateId) -> Self::ArcIter<'a> {","highlight_start":60,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"elide the lifetimes","code":null,"level":"help","spans":[{"file_name":"src/fst/const_fst.rs","byte_start":2635,"byte_end":2639,"line_start":103,"line_end":103,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"    fn arcs<'a>(&'a self, state: StateId) -> Self::ArcIter<'a> {","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/fst/const_fst.rs","byte_start":2641,"byte_end":2644,"line_start":103,"line_end":103,"column_start":18,"column_end":21,"is_primary":true,"text":[{"text":"    fn arcs<'a>(&'a self, state: StateId) -> Self::ArcIter<'a> {","highlight_start":18,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/fst/const_fst.rs","byte_start":2683,"byte_end":2685,"line_start":103,"line_end":103,"column_start":60,"column_end":62,"is_primary":true,"text":[{"text":"    fn arcs<'a>(&'a self, state: StateId) -> Self::ArcIter<'a> {","highlight_start":60,"highlight_end":62}],"label":null,"suggested_replacement":"'_","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the following explicit lifetimes could be elided: 'a\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/fst/const_fst.rs:103:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn arcs<'a>(&'a self, state: StateId) -> Self::ArcIter<'a> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: elide the lifetimes\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    fn arcs\u001b[0m\u001b[0m\u001b[38;5;9m<'a>\u001b[0m\u001b[0m(&\u001b[0m\u001b[0m\u001b[38;5;9m'a \u001b[0m\u001b[0mself, state: StateId) -> Self::ArcIter<\u001b[0m\u001b[0m\u001b[38;5;9m'a\u001b[0m\u001b[0m> {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    fn arcs(&self, state: StateId) -> Self::ArcIter<\u001b[0m\u001b[0m\u001b[38;5;10m'_\u001b[0m\u001b[0m> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"you should consider adding a `Default` implementation for `CompactFst<W, C>`","code":{"code":"clippy::new_without_default","explanation":null},"level":"warning","spans":[{"file_name":"src/fst/compact_fst.rs","byte_start":2545,"byte_end":2770,"line_start":98,"line_end":106,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    pub fn new() -> Self {","highlight_start":5,"highlight_end":27},{"text":"        Self {","highlight_start":1,"highlight_end":15},{"text":"            states: Vec::new(),","highlight_start":1,"highlight_end":32},{"text":"            data: Vec::new(),","highlight_start":1,"highlight_end":30},{"text":"            start: None,","highlight_start":1,"highlight_end":25},{"text":"            properties: FstProperties::default(),","highlight_start":1,"highlight_end":50},{"text":"            _phantom: PhantomData,","highlight_start":1,"highlight_end":35},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::new_without_default)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try adding this","code":null,"level":"help","spans":[{"file_name":"src/fst/compact_fst.rs","byte_start":2454,"byte_end":2454,"line_start":96,"line_end":96,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"impl<W: Semiring, C: Compactor<W>> CompactFst<W, C> {","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"impl<W: Semiring, C: Compactor<W>> Default for CompactFst<W, C> {\n    fn default() -> Self {\n        Self::new()\n    }\n}\n\n","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: you should consider adding a `Default` implementation for `CompactFst<W, C>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/fst/compact_fst.rs:98:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m98\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn new() -> Self {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m99\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Self {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m100\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            states: Vec::new(),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            data: Vec::new(),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_____^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::new_without_default)]` on by default\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: try adding this\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m96\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ impl<W: Semiring, C: Compactor<W>> Default for CompactFst<W, C> {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m97\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+     fn default() -> Self {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m98\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+         Self::new()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m99\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+     }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m100\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the following explicit lifetimes could be elided: 'a","code":{"code":"clippy::needless_lifetimes","explanation":null},"level":"warning","spans":[{"file_name":"src/fst/compact_fst.rs","byte_start":2987,"byte_end":2989,"line_start":118,"line_end":118,"column_start":6,"column_end":8,"is_primary":true,"text":[{"text":"impl<'a, W: Semiring, C: Compactor<W>> ArcIterator<W> for CompactArcIterator<'a, W, C> {","highlight_start":6,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/fst/compact_fst.rs","byte_start":3059,"byte_end":3061,"line_start":118,"line_end":118,"column_start":78,"column_end":80,"is_primary":true,"text":[{"text":"impl<'a, W: Semiring, C: Compactor<W>> ArcIterator<W> for CompactArcIterator<'a, W, C> {","highlight_start":78,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"elide the lifetimes","code":null,"level":"help","spans":[{"file_name":"src/fst/compact_fst.rs","byte_start":2987,"byte_end":2991,"line_start":118,"line_end":118,"column_start":6,"column_end":10,"is_primary":true,"text":[{"text":"impl<'a, W: Semiring, C: Compactor<W>> ArcIterator<W> for CompactArcIterator<'a, W, C> {","highlight_start":6,"highlight_end":10}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/fst/compact_fst.rs","byte_start":3059,"byte_end":3061,"line_start":118,"line_end":118,"column_start":78,"column_end":80,"is_primary":true,"text":[{"text":"impl<'a, W: Semiring, C: Compactor<W>> ArcIterator<W> for CompactArcIterator<'a, W, C> {","highlight_start":78,"highlight_end":80}],"label":null,"suggested_replacement":"'_","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the following explicit lifetimes could be elided: 'a\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/fst/compact_fst.rs:118:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl<'a, W: Semiring, C: Compactor<W>> ArcIterator<W> for CompactArcIterator<'a, W, C> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m                                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: elide the lifetimes\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mimpl<\u001b[0m\u001b[0m\u001b[38;5;9m'a, \u001b[0m\u001b[0mW: Semiring, C: Compactor<W>> ArcIterator<W> for CompactArcIterator<\u001b[0m\u001b[0m\u001b[38;5;9m'a\u001b[0m\u001b[0m, W, C> {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mimpl<W: Semiring, C: Compactor<W>> ArcIterator<W> for CompactArcIterator<\u001b[0m\u001b[0m\u001b[38;5;10m'_\u001b[0m\u001b[0m, W, C> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the following explicit lifetimes could be elided: 'a","code":{"code":"clippy::needless_lifetimes","explanation":null},"level":"warning","spans":[{"file_name":"src/fst/compact_fst.rs","byte_start":3133,"byte_end":3135,"line_start":124,"line_end":124,"column_start":6,"column_end":8,"is_primary":true,"text":[{"text":"impl<'a, W: Semiring, C: Compactor<W>> Iterator for CompactArcIterator<'a, W, C> {","highlight_start":6,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/fst/compact_fst.rs","byte_start":3199,"byte_end":3201,"line_start":124,"line_end":124,"column_start":72,"column_end":74,"is_primary":true,"text":[{"text":"impl<'a, W: Semiring, C: Compactor<W>> Iterator for CompactArcIterator<'a, W, C> {","highlight_start":72,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"elide the lifetimes","code":null,"level":"help","spans":[{"file_name":"src/fst/compact_fst.rs","byte_start":3133,"byte_end":3137,"line_start":124,"line_end":124,"column_start":6,"column_end":10,"is_primary":true,"text":[{"text":"impl<'a, W: Semiring, C: Compactor<W>> Iterator for CompactArcIterator<'a, W, C> {","highlight_start":6,"highlight_end":10}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/fst/compact_fst.rs","byte_start":3199,"byte_end":3201,"line_start":124,"line_end":124,"column_start":72,"column_end":74,"is_primary":true,"text":[{"text":"impl<'a, W: Semiring, C: Compactor<W>> Iterator for CompactArcIterator<'a, W, C> {","highlight_start":72,"highlight_end":74}],"label":null,"suggested_replacement":"'_","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the following explicit lifetimes could be elided: 'a\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/fst/compact_fst.rs:124:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m124\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl<'a, W: Semiring, C: Compactor<W>> Iterator for CompactArcIterator<'a, W, C> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m                                                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: elide the lifetimes\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m124\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mimpl<\u001b[0m\u001b[0m\u001b[38;5;9m'a, \u001b[0m\u001b[0mW: Semiring, C: Compactor<W>> Iterator for CompactArcIterator<\u001b[0m\u001b[0m\u001b[38;5;9m'a\u001b[0m\u001b[0m, W, C> {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m124\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mimpl<W: Semiring, C: Compactor<W>> Iterator for CompactArcIterator<\u001b[0m\u001b[0m\u001b[38;5;10m'_\u001b[0m\u001b[0m, W, C> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the following explicit lifetimes could be elided: 'a","code":{"code":"clippy::needless_lifetimes","explanation":null},"level":"warning","spans":[{"file_name":"src/fst/compact_fst.rs","byte_start":4238,"byte_end":4240,"line_start":165,"line_end":165,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    fn arcs<'a>(&'a self, state: StateId) -> Self::ArcIter<'a> {","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/fst/compact_fst.rs","byte_start":4243,"byte_end":4245,"line_start":165,"line_end":165,"column_start":18,"column_end":20,"is_primary":true,"text":[{"text":"    fn arcs<'a>(&'a self, state: StateId) -> Self::ArcIter<'a> {","highlight_start":18,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/fst/compact_fst.rs","byte_start":4285,"byte_end":4287,"line_start":165,"line_end":165,"column_start":60,"column_end":62,"is_primary":true,"text":[{"text":"    fn arcs<'a>(&'a self, state: StateId) -> Self::ArcIter<'a> {","highlight_start":60,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"elide the lifetimes","code":null,"level":"help","spans":[{"file_name":"src/fst/compact_fst.rs","byte_start":4237,"byte_end":4241,"line_start":165,"line_end":165,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"    fn arcs<'a>(&'a self, state: StateId) -> Self::ArcIter<'a> {","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/fst/compact_fst.rs","byte_start":4243,"byte_end":4246,"line_start":165,"line_end":165,"column_start":18,"column_end":21,"is_primary":true,"text":[{"text":"    fn arcs<'a>(&'a self, state: StateId) -> Self::ArcIter<'a> {","highlight_start":18,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/fst/compact_fst.rs","byte_start":4285,"byte_end":4287,"line_start":165,"line_end":165,"column_start":60,"column_end":62,"is_primary":true,"text":[{"text":"    fn arcs<'a>(&'a self, state: StateId) -> Self::ArcIter<'a> {","highlight_start":60,"highlight_end":62}],"label":null,"suggested_replacement":"'_","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the following explicit lifetimes could be elided: 'a\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/fst/compact_fst.rs:165:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m165\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn arcs<'a>(&'a self, state: StateId) -> Self::ArcIter<'a> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: elide the lifetimes\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m165\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    fn arcs\u001b[0m\u001b[0m\u001b[38;5;9m<'a>\u001b[0m\u001b[0m(&\u001b[0m\u001b[0m\u001b[38;5;9m'a \u001b[0m\u001b[0mself, state: StateId) -> Self::ArcIter<\u001b[0m\u001b[0m\u001b[38;5;9m'a\u001b[0m\u001b[0m> {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m165\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    fn arcs(&self, state: StateId) -> Self::ArcIter<\u001b[0m\u001b[0m\u001b[38;5;10m'_\u001b[0m\u001b[0m> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the following explicit lifetimes could be elided: 'a","code":{"code":"clippy::needless_lifetimes","explanation":null},"level":"warning","spans":[{"file_name":"src/fst/lazy_fst.rs","byte_start":3544,"byte_end":3546,"line_start":140,"line_end":140,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    fn arcs<'a>(&'a self, state: StateId) -> Self::ArcIter<'a> {","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/fst/lazy_fst.rs","byte_start":3549,"byte_end":3551,"line_start":140,"line_end":140,"column_start":18,"column_end":20,"is_primary":true,"text":[{"text":"    fn arcs<'a>(&'a self, state: StateId) -> Self::ArcIter<'a> {","highlight_start":18,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/fst/lazy_fst.rs","byte_start":3591,"byte_end":3593,"line_start":140,"line_end":140,"column_start":60,"column_end":62,"is_primary":true,"text":[{"text":"    fn arcs<'a>(&'a self, state: StateId) -> Self::ArcIter<'a> {","highlight_start":60,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"elide the lifetimes","code":null,"level":"help","spans":[{"file_name":"src/fst/lazy_fst.rs","byte_start":3543,"byte_end":3547,"line_start":140,"line_end":140,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"    fn arcs<'a>(&'a self, state: StateId) -> Self::ArcIter<'a> {","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/fst/lazy_fst.rs","byte_start":3549,"byte_end":3552,"line_start":140,"line_end":140,"column_start":18,"column_end":21,"is_primary":true,"text":[{"text":"    fn arcs<'a>(&'a self, state: StateId) -> Self::ArcIter<'a> {","highlight_start":18,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/fst/lazy_fst.rs","byte_start":3591,"byte_end":3593,"line_start":140,"line_end":140,"column_start":60,"column_end":62,"is_primary":true,"text":[{"text":"    fn arcs<'a>(&'a self, state: StateId) -> Self::ArcIter<'a> {","highlight_start":60,"highlight_end":62}],"label":null,"suggested_replacement":"'_","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the following explicit lifetimes could be elided: 'a\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/fst/lazy_fst.rs:140:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m140\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn arcs<'a>(&'a self, state: StateId) -> Self::ArcIter<'a> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: elide the lifetimes\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m140\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    fn arcs\u001b[0m\u001b[0m\u001b[38;5;9m<'a>\u001b[0m\u001b[0m(&\u001b[0m\u001b[0m\u001b[38;5;9m'a \u001b[0m\u001b[0mself, state: StateId) -> Self::ArcIter<\u001b[0m\u001b[0m\u001b[38;5;9m'a\u001b[0m\u001b[0m> {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m140\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    fn arcs(&self, state: StateId) -> Self::ArcIter<\u001b[0m\u001b[0m\u001b[38;5;10m'_\u001b[0m\u001b[0m> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the following explicit lifetimes could be elided: 'a","code":{"code":"clippy::needless_lifetimes","explanation":null},"level":"warning","spans":[{"file_name":"src/fst/cache_fst.rs","byte_start":2383,"byte_end":2385,"line_start":94,"line_end":94,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    fn arcs<'a>(&'a self, state: StateId) -> Self::ArcIter<'a> {","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/fst/cache_fst.rs","byte_start":2388,"byte_end":2390,"line_start":94,"line_end":94,"column_start":18,"column_end":20,"is_primary":true,"text":[{"text":"    fn arcs<'a>(&'a self, state: StateId) -> Self::ArcIter<'a> {","highlight_start":18,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/fst/cache_fst.rs","byte_start":2430,"byte_end":2432,"line_start":94,"line_end":94,"column_start":60,"column_end":62,"is_primary":true,"text":[{"text":"    fn arcs<'a>(&'a self, state: StateId) -> Self::ArcIter<'a> {","highlight_start":60,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"elide the lifetimes","code":null,"level":"help","spans":[{"file_name":"src/fst/cache_fst.rs","byte_start":2382,"byte_end":2386,"line_start":94,"line_end":94,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"    fn arcs<'a>(&'a self, state: StateId) -> Self::ArcIter<'a> {","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/fst/cache_fst.rs","byte_start":2388,"byte_end":2391,"line_start":94,"line_end":94,"column_start":18,"column_end":21,"is_primary":true,"text":[{"text":"    fn arcs<'a>(&'a self, state: StateId) -> Self::ArcIter<'a> {","highlight_start":18,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/fst/cache_fst.rs","byte_start":2430,"byte_end":2432,"line_start":94,"line_end":94,"column_start":60,"column_end":62,"is_primary":true,"text":[{"text":"    fn arcs<'a>(&'a self, state: StateId) -> Self::ArcIter<'a> {","highlight_start":60,"highlight_end":62}],"label":null,"suggested_replacement":"'_","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the following explicit lifetimes could be elided: 'a\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/fst/cache_fst.rs:94:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m94\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn arcs<'a>(&'a self, state: StateId) -> Self::ArcIter<'a> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: elide the lifetimes\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m94\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    fn arcs\u001b[0m\u001b[0m\u001b[38;5;9m<'a>\u001b[0m\u001b[0m(&\u001b[0m\u001b[0m\u001b[38;5;9m'a \u001b[0m\u001b[0mself, state: StateId) -> Self::ArcIter<\u001b[0m\u001b[0m\u001b[38;5;9m'a\u001b[0m\u001b[0m> {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m94\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    fn arcs(&self, state: StateId) -> Self::ArcIter<\u001b[0m\u001b[0m\u001b[38;5;10m'_\u001b[0m\u001b[0m> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"found call to `str::trim` before `str::split_whitespace`","code":{"code":"clippy::trim_split_whitespace","explanation":null},"level":"warning","spans":[{"file_name":"src/io/text_format.rs","byte_start":2379,"byte_end":2386,"line_start":90,"line_end":90,"column_start":37,"column_end":44,"is_primary":true,"text":[{"text":"        let parts: Vec<&str> = line.trim().split_whitespace().collect();","highlight_start":37,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#trim_split_whitespace","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::trim_split_whitespace)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove `trim()`","code":null,"level":"help","spans":[{"file_name":"src/io/text_format.rs","byte_start":2379,"byte_end":2386,"line_start":90,"line_end":90,"column_start":37,"column_end":44,"is_primary":true,"text":[{"text":"        let parts: Vec<&str> = line.trim().split_whitespace().collect();","highlight_start":37,"highlight_end":44}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: found call to `str::trim` before `str::split_whitespace`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/io/text_format.rs:90:37\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m90\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let parts: Vec<&str> = line.trim().split_whitespace().collect();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove `trim()`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#trim_split_whitespace\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::trim_split_whitespace)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this expression creates a reference which is immediately dereferenced by the compiler","code":{"code":"clippy::needless_borrow","explanation":null},"level":"warning","spans":[{"file_name":"src/semiring/tropical.rs","byte_start":2132,"byte_end":2137,"line_start":92,"line_end":92,"column_start":48,"column_end":53,"is_primary":true,"text":[{"text":"        if <Self as num_traits::Zero>::is_zero(&self) && <Self as num_traits::Zero>::is_zero(&other) {","highlight_start":48,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::needless_borrow)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"change this to","code":null,"level":"help","spans":[{"file_name":"src/semiring/tropical.rs","byte_start":2132,"byte_end":2137,"line_start":92,"line_end":92,"column_start":48,"column_end":53,"is_primary":true,"text":[{"text":"        if <Self as num_traits::Zero>::is_zero(&self) && <Self as num_traits::Zero>::is_zero(&other) {","highlight_start":48,"highlight_end":53}],"label":null,"suggested_replacement":"self","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this expression creates a reference which is immediately dereferenced by the compiler\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/semiring/tropical.rs:92:48\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m92\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if <Self as num_traits::Zero>::is_zero(&self) && <Self as num_traits::Zero>::is_zero(&other) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: change this to: `self`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::needless_borrow)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this expression creates a reference which is immediately dereferenced by the compiler","code":{"code":"clippy::needless_borrow","explanation":null},"level":"warning","spans":[{"file_name":"src/semiring/tropical.rs","byte_start":2178,"byte_end":2184,"line_start":92,"line_end":92,"column_start":94,"column_end":100,"is_primary":true,"text":[{"text":"        if <Self as num_traits::Zero>::is_zero(&self) && <Self as num_traits::Zero>::is_zero(&other) {","highlight_start":94,"highlight_end":100}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"change this to","code":null,"level":"help","spans":[{"file_name":"src/semiring/tropical.rs","byte_start":2178,"byte_end":2184,"line_start":92,"line_end":92,"column_start":94,"column_end":100,"is_primary":true,"text":[{"text":"        if <Self as num_traits::Zero>::is_zero(&self) && <Self as num_traits::Zero>::is_zero(&other) {","highlight_start":94,"highlight_end":100}],"label":null,"suggested_replacement":"other","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this expression creates a reference which is immediately dereferenced by the compiler\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/semiring/tropical.rs:92:94\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m92\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if <Self as num_traits::Zero>::is_zero(&self) && <Self as num_traits::Zero>::is_zero(&other) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: change this to: `other`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this expression creates a reference which is immediately dereferenced by the compiler","code":{"code":"clippy::needless_borrow","explanation":null},"level":"warning","spans":[{"file_name":"src/semiring/tropical.rs","byte_start":2492,"byte_end":2498,"line_start":104,"line_end":104,"column_start":48,"column_end":54,"is_primary":true,"text":[{"text":"        if <Self as num_traits::Zero>::is_zero(&other) {","highlight_start":48,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"change this to","code":null,"level":"help","spans":[{"file_name":"src/semiring/tropical.rs","byte_start":2492,"byte_end":2498,"line_start":104,"line_end":104,"column_start":48,"column_end":54,"is_primary":true,"text":[{"text":"        if <Self as num_traits::Zero>::is_zero(&other) {","highlight_start":48,"highlight_end":54}],"label":null,"suggested_replacement":"other","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this expression creates a reference which is immediately dereferenced by the compiler\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/semiring/tropical.rs:104:48\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m104\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if <Self as num_traits::Zero>::is_zero(&other) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: change this to: `other`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this expression creates a reference which is immediately dereferenced by the compiler","code":{"code":"clippy::needless_borrow","explanation":null},"level":"warning","spans":[{"file_name":"src/semiring/tropical.rs","byte_start":2573,"byte_end":2578,"line_start":106,"line_end":106,"column_start":55,"column_end":60,"is_primary":true,"text":[{"text":"        } else if <Self as num_traits::Zero>::is_zero(&self) {","highlight_start":55,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"change this to","code":null,"level":"help","spans":[{"file_name":"src/semiring/tropical.rs","byte_start":2573,"byte_end":2578,"line_start":106,"line_end":106,"column_start":55,"column_end":60,"is_primary":true,"text":[{"text":"        } else if <Self as num_traits::Zero>::is_zero(&self) {","highlight_start":55,"highlight_end":60}],"label":null,"suggested_replacement":"self","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this expression creates a reference which is immediately dereferenced by the compiler\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/semiring/tropical.rs:106:55\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        } else if <Self as num_traits::Zero>::is_zero(&self) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: change this to: `self`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this expression creates a reference which is immediately dereferenced by the compiler","code":{"code":"clippy::needless_borrow","explanation":null},"level":"warning","spans":[{"file_name":"src/semiring/probability.rs","byte_start":2003,"byte_end":2009,"line_start":88,"line_end":88,"column_start":48,"column_end":54,"is_primary":true,"text":[{"text":"        if <Self as num_traits::Zero>::is_zero(&other) {","highlight_start":48,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"change this to","code":null,"level":"help","spans":[{"file_name":"src/semiring/probability.rs","byte_start":2003,"byte_end":2009,"line_start":88,"line_end":88,"column_start":48,"column_end":54,"is_primary":true,"text":[{"text":"        if <Self as num_traits::Zero>::is_zero(&other) {","highlight_start":48,"highlight_end":54}],"label":null,"suggested_replacement":"other","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this expression creates a reference which is immediately dereferenced by the compiler\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/semiring/probability.rs:88:48\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if <Self as num_traits::Zero>::is_zero(&other) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: change this to: `other`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this expression creates a reference which is immediately dereferenced by the compiler","code":{"code":"clippy::needless_borrow","explanation":null},"level":"warning","spans":[{"file_name":"src/semiring/log.rs","byte_start":2748,"byte_end":2753,"line_start":118,"line_end":118,"column_start":48,"column_end":53,"is_primary":true,"text":[{"text":"        if <Self as num_traits::Zero>::is_zero(&self) && <Self as num_traits::Zero>::is_zero(&other) {","highlight_start":48,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"change this to","code":null,"level":"help","spans":[{"file_name":"src/semiring/log.rs","byte_start":2748,"byte_end":2753,"line_start":118,"line_end":118,"column_start":48,"column_end":53,"is_primary":true,"text":[{"text":"        if <Self as num_traits::Zero>::is_zero(&self) && <Self as num_traits::Zero>::is_zero(&other) {","highlight_start":48,"highlight_end":53}],"label":null,"suggested_replacement":"self","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this expression creates a reference which is immediately dereferenced by the compiler\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/semiring/log.rs:118:48\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if <Self as num_traits::Zero>::is_zero(&self) && <Self as num_traits::Zero>::is_zero(&other) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: change this to: `self`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this expression creates a reference which is immediately dereferenced by the compiler","code":{"code":"clippy::needless_borrow","explanation":null},"level":"warning","spans":[{"file_name":"src/semiring/log.rs","byte_start":2794,"byte_end":2800,"line_start":118,"line_end":118,"column_start":94,"column_end":100,"is_primary":true,"text":[{"text":"        if <Self as num_traits::Zero>::is_zero(&self) && <Self as num_traits::Zero>::is_zero(&other) {","highlight_start":94,"highlight_end":100}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"change this to","code":null,"level":"help","spans":[{"file_name":"src/semiring/log.rs","byte_start":2794,"byte_end":2800,"line_start":118,"line_end":118,"column_start":94,"column_end":100,"is_primary":true,"text":[{"text":"        if <Self as num_traits::Zero>::is_zero(&self) && <Self as num_traits::Zero>::is_zero(&other) {","highlight_start":94,"highlight_end":100}],"label":null,"suggested_replacement":"other","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this expression creates a reference which is immediately dereferenced by the compiler\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/semiring/log.rs:118:94\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if <Self as num_traits::Zero>::is_zero(&self) && <Self as num_traits::Zero>::is_zero(&other) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: change this to: `other`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this expression creates a reference which is immediately dereferenced by the compiler","code":{"code":"clippy::needless_borrow","explanation":null},"level":"warning","spans":[{"file_name":"src/semiring/log.rs","byte_start":3043,"byte_end":3049,"line_start":128,"line_end":128,"column_start":48,"column_end":54,"is_primary":true,"text":[{"text":"        if <Self as num_traits::Zero>::is_zero(&other) {","highlight_start":48,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"change this to","code":null,"level":"help","spans":[{"file_name":"src/semiring/log.rs","byte_start":3043,"byte_end":3049,"line_start":128,"line_end":128,"column_start":48,"column_end":54,"is_primary":true,"text":[{"text":"        if <Self as num_traits::Zero>::is_zero(&other) {","highlight_start":48,"highlight_end":54}],"label":null,"suggested_replacement":"other","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this expression creates a reference which is immediately dereferenced by the compiler\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/semiring/log.rs:128:48\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m128\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if <Self as num_traits::Zero>::is_zero(&other) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: change this to: `other`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this expression creates a reference which is immediately dereferenced by the compiler","code":{"code":"clippy::needless_borrow","explanation":null},"level":"warning","spans":[{"file_name":"src/semiring/log.rs","byte_start":3124,"byte_end":3129,"line_start":130,"line_end":130,"column_start":55,"column_end":60,"is_primary":true,"text":[{"text":"        } else if <Self as num_traits::Zero>::is_zero(&self) {","highlight_start":55,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"change this to","code":null,"level":"help","spans":[{"file_name":"src/semiring/log.rs","byte_start":3124,"byte_end":3129,"line_start":130,"line_end":130,"column_start":55,"column_end":60,"is_primary":true,"text":[{"text":"        } else if <Self as num_traits::Zero>::is_zero(&self) {","highlight_start":55,"highlight_end":60}],"label":null,"suggested_replacement":"self","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this expression creates a reference which is immediately dereferenced by the compiler\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/semiring/log.rs:130:55\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m130\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        } else if <Self as num_traits::Zero>::is_zero(&self) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: change this to: `self`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `from_str` can be confused for the standard trait method `std::str::FromStr::from_str`","code":{"code":"clippy::should_implement_trait","explanation":null},"level":"warning","spans":[{"file_name":"src/semiring/string.rs","byte_start":612,"byte_end":688,"line_start":23,"line_end":25,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    pub fn from_str(s: &str) -> Self {","highlight_start":5,"highlight_end":39},{"text":"        Self(s.as_bytes().to_vec())","highlight_start":1,"highlight_end":36},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider implementing the trait `std::str::FromStr` or choosing a less ambiguous method name","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::should_implement_trait)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `from_str` can be confused for the standard trait method `std::str::FromStr::from_str`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/semiring/string.rs:23:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn from_str(s: &str) -> Self {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Self(s.as_bytes().to_vec())\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_____^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider implementing the trait `std::str::FromStr` or choosing a less ambiguous method name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::should_implement_trait)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"you should consider adding a `Default` implementation for `StateQueue<P>`","code":{"code":"clippy::new_without_default","explanation":null},"level":"warning","spans":[{"file_name":"src/utils/queue.rs","byte_start":1957,"byte_end":2047,"line_start":96,"line_end":100,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    pub fn new() -> Self {","highlight_start":5,"highlight_end":27},{"text":"        Self {","highlight_start":1,"highlight_end":15},{"text":"            heap: BinaryHeap::new(),","highlight_start":1,"highlight_end":37},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try adding this","code":null,"level":"help","spans":[{"file_name":"src/utils/queue.rs","byte_start":1891,"byte_end":1891,"line_start":94,"line_end":94,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"impl<P: Ord> StateQueue<P> {","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"impl<P: Ord> Default for StateQueue<P> {\n    fn default() -> Self {\n        Self::new()\n    }\n}\n\n","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: you should consider adding a `Default` implementation for `StateQueue<P>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/utils/queue.rs:96:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m96\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn new() -> Self {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m97\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Self {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m98\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            heap: BinaryHeap::new(),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m99\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m100\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_____^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: try adding this\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m94\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ impl<P: Ord> Default for StateQueue<P> {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m95\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+     fn default() -> Self {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m96\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+         Self::new()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m97\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+     }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m98\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"29 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 29 warnings emitted\u001b[0m\n\n"}
